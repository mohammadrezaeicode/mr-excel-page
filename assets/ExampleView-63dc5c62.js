import{r as C,u as O,o as E,a as k,g as i,b as T,c as I,d as S,w as P,e as p,f as w,h as u,i as m,j as f,k as y,l as g,m as x,n as s,p as o,C as l,q as e,s as t}from"./index-50d26b3f.js";const A=e("h1",{id:"examples"},"Examples",-1),N=e("p",null," On this page, we aim to provide a more in-depth exploration of the library's future capabilities. We will also present examples for the most commonly required use cases. ",-1),W=e("p",null," You can validate the examples by clicking on the download button located in the top-right corner of each example section. By doing so, you can view or copy the example text using the copy button and then paste it into the console. We have added the library to the window, allowing you to access it directly within the console. ",-1),z=e("h2",{id:"general-option"},"General Option",-1),B=e("p",null,[t(" Each sheet has options for customization. You can change the sheet name using "),e("b",null,"name"),t(", adjust the tab name color with "),e("b",null,"tabColor"),t(", control visibility with "),e("b",null,"state"),t(", add protection to a sheet via "),e("b",null,"protectionOption"),t(", and implement sorting and filtering using "),e("b",null,"sortAndfilter"),t(". In the example below, we will demonstrate how to utilize these properties. Additionally, for Excel file information, we offer options such as "),e("b",null,"creator"),t(", "),e("b",null,"created"),t(", "),e("b",null,"notSave"),t(", and "),e("b",null,"modified"),t(". "),e("br"),e("span",{class:"dangger"},[t("*Note: Please use the protectionOption only when necessary, as it may potentially lead to broken generated files. We recommend avoiding the use of other sheet options as well. "),e("br"),t(" *Important Note: Excel file information such as 'name', 'created', and 'modified' is extremely sensitive. If incorrect values are used, it can result in Excel file generation issues. Please exercise extra caution and ensure accurate values for these attributes to avoid any potential disruptions. ")])],-1),V=e("h2",{id:"header-option"},"Header Option",-1),H=e("p",null,[t(" We offer specific header options for Excel headers. The header is a mandatory component, so the "),e("b",null,"withoutHeader"),t(" option cannot be used to omit it. The "),e("b",null,"headerHeight"),t(" option is employed to determine the height of the header row. Additionally, we provide the "),e("b",null,"headerStyleKey"),t(" property, which specifies the most commonly used style for each cell (its value corresponds to the style ID; detailed functionality is explained in the Styles section). ")],-1),L=e("p",null,[t(" Each header cell is endowed with properties beyond the label and text. The "),e("b",null,"size"),t(" property defines the width of the column, while the "),e("b",null,"formula"),t(" property applies a formula to all rows (excluding the header) within the column, ultimately affecting the final cell in that column. ")],-1),M=e("h2",{id:"formula-option"},"Formula Option",-1),R=e("p",null,[t(" We provide two distinct methods for defining formulas: customization and column type. In the customization approach, if you employ a cell containing data that is used within the formula, the formula will display an instance of the formula. When using the customization type, it's important to specify the formula type, which can be any of the following: "),e("b",null,"AVERAGE"),t(", "),e("b",null,"SUM"),t(", "),e("b",null,"COUNT"),t(", "),e("b",null,"MAX"),t(", or "),e("b",null,"MIN"),t(". ")],-1),U=e("h2",{id:"styles-format-options"},"Styles & Format Options",-1),q=e("p",null," In the library, styles are defined with an ID that represents the desired style. This ID is then used to apply the corresponding style to cells. Each cell is associated with only one style. These styles encompass various attributes such as borders, alignment, text color, font family, font size, background, and bold, among others. ",-1),D=e("p",null," The format property is a distinct style attribute. Unlike other styles, the format is predefined and cannot be customized. ",-1),G=e("h2",{id:"merging-cells-options"},"Merging Cells Options",-1),Y=e("p",null," We offer options for merging rows of cells together. Additionally, we provide a function-based approach to facilitate cell merging. ",-1),F=e("h2",{id:"group-rows-options"},"Group Rows Options",-1),K=e("p",null,[t(" With this library, you can group rows together using two properties added to the data: "),e("b",null,"outlineLevel"),t(" and "),e("b",null,"hidden"),t(". The outlineLevel represents the grouping level, while hidden represents whether the default state is collapsed or not. The key of this property is changeable, so in case of a conflict with your data, you have the flexibility to modify it. We will discuss how to change the key in the next section. ")],-1),X=e("h2",{id:"complex-options"},"Complex Options",-1),J=e("p",null," In the examples below, we aim to define some fun scenarios that could be useful for more complex use cases. ",-1),Q=e("h3",{id:"adjusting-key-properties-and-row-height"},"Adjusting Key Properties and Row Height",-1),Z=e("p",null," You have the ability to change the key of reserved properties such as height, hidden, and more. Additionally, you can adjust the height of rows as needed. ",-1),$=e("h3",{id:"conditional-styling"},"Conditional Styling",-1),ee=e("p",null," Using the 'styleCellCondition' option, you can apply styles to each cell based on specific conditions as needed. ",-1),ne={__name:"ExampleView",setup(te){const v=C(null);let d=[];const b=O();b.setNavBar(1),E(()=>{["general-option","header-option","formula-option","styles-format-options","merging-cells-options","group-rows-options","complex-options","adjusting-key-properties-and-row-height","conditional-styling"].forEach(a=>{d.push(document.querySelector("#"+a))}),document.body.scrollTop=0,document.documentElement.scrollTop=0}),window.addEventListener("scroll",function(){let r=-1,a=-1,h=0;d.forEach((j,_)=>{const c=j.getBoundingClientRect().top;c>0&&(a<0||a>c)?c>this.window.innerHeight?(a=c,r=_-1):(a=c,r=_):h++}),h==d.length&&(r=d.length-1),b.setSelect(r)});let n=k({ex2:i(p.data,p.colorPalette,p.url),ex3:i(w.data),ex4:i(u.data,u.colorPalette,u.url),ex5:i(m.data,m.colorPalette,m.url),ex6:i(f.data,f.colorPalette,f.url),ex7:i(y.data,y.colorPalette,y.url),ex8:i(g.data,g.colorPalette,g.url),ex9:i(x.data,x.colorPalette,x.url)});return(r,a)=>{const h=T("v-container");return I(),S(h,{ref_key:"root",ref:v},{default:P(()=>[A,N,W,z,B,s(l,{stringCode:o(n).ex2,type:"javascript",exampleObject:o(p)},null,8,["stringCode","exampleObject"]),V,H,L,s(l,{stringCode:o(n).ex3,type:"javascript",exampleObject:o(w)},null,8,["stringCode","exampleObject"]),M,R,s(l,{stringCode:o(n).ex4,type:"javascript",exampleObject:o(u)},null,8,["stringCode","exampleObject"]),U,q,D,s(l,{stringCode:o(n).ex5,type:"javascript",exampleObject:o(m)},null,8,["stringCode","exampleObject"]),G,Y,s(l,{stringCode:o(n).ex6,type:"javascript",exampleObject:o(f)},null,8,["stringCode","exampleObject"]),F,K,s(l,{stringCode:o(n).ex7,type:"javascript",exampleObject:o(y)},null,8,["stringCode","exampleObject"]),X,J,Q,Z,s(l,{stringCode:o(n).ex8,type:"javascript",exampleObject:o(g)},null,8,["stringCode","exampleObject"]),$,ee,s(l,{stringCode:o(n).ex9,type:"javascript",exampleObject:o(x)},null,8,["stringCode","exampleObject"])]),_:1},512)}}};export{ne as default};
